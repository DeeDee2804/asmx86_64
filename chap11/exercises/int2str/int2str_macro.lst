     1                                 %line 1+1 int2str_macro.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 %line 37+1 int2str_macro.asm
    11                                 
    12                                 
    13                                 
    14                                 [section .data]
    15                                 
    16                                 
    17                                 
    18                                 EXIT_SUCCESS equ 0
    19                                 SYS_exit equ 60
    20                                 
    21                                 
    22 00000000 D2040000               num1 dd 1234
    23 00000004 10270000               num2 dd 10000
    24 00000008 00000000               num3 dd 0
    25                                 
    26                                 
    27                                 
    28                                 [section .bss]
    29                                 
    30 00000000 <gap>                  str1 resb 7
    31 00000007 <gap>                  str2 resb 7
    32 0000000E <gap>                  str3 resb 7
    33                                 
    34                                 
    35                                 
    36                                 [section .text]
    37                                 [global _start]
    38                                 _start:
    39                                 
    40                                 %line 65+0 int2str_macro.asm
    41 00000000 8B0425[00000000]        mov eax, dword [num1]
    42 00000007 48C7C100000000          mov rcx, 0
    43 0000000E BB0A000000              mov ebx, 10
    44 00000013 48C7C200000000          mov rdx, 0
    45                                 
    46                                 ..@4.divideLoop:
    47 0000001A BA00000000              mov edx, 0
    48 0000001F F7F3                    div ebx
    49 00000021 52                      push rdx
    50 00000022 48FFC1                  inc rcx
    51 00000025 83F800                  cmp eax, 0
    52 00000028 75EE                    jne ..@4.divideLoop
    53                                 
    54                                 
    55                                 
    56 0000002A 488D1C25[00000000]      lea rbx, [str1]
    57 00000032 48C7C700000000          mov rdi, 0
    58                                 ..@4.popLoop:
    59 00000039 58                      pop rax
    60 0000003A 0430                    add al, '0'
    61 0000003C 88043B                  mov byte [rbx+rdi], al
    62 0000003F 48FFC7                  inc rdi
    63 00000042 E2F3                    loop ..@4.popLoop
    64                                 
    65 00000044 C6043B00               mov byte [rbx+rdi], 0
    66                                 %line 66+1 int2str_macro.asm
    67                                 
    68                                 %line 66+0 int2str_macro.asm
    69 00000048 8B0425[00000000]        mov eax, dword [num2]
    70 0000004F 48C7C100000000          mov rcx, 0
    71 00000056 BB0A000000              mov ebx, 10
    72 0000005B 48C7C200000000          mov rdx, 0
    73                                 
    74                                 ..@5.divideLoop:
    75 00000062 BA00000000              mov edx, 0
    76 00000067 F7F3                    div ebx
    77 00000069 52                      push rdx
    78 0000006A 48FFC1                  inc rcx
    79 0000006D 83F800                  cmp eax, 0
    80 00000070 75EE                    jne ..@5.divideLoop
    81                                 
    82                                 
    83                                 
    84 00000072 488D1C25[00000000]      lea rbx, [str2]
    85 0000007A 48C7C700000000          mov rdi, 0
    86                                 ..@5.popLoop:
    87 00000081 58                      pop rax
    88 00000082 0430                    add al, '0'
    89 00000084 88043B                  mov byte [rbx+rdi], al
    90 00000087 48FFC7                  inc rdi
    91 0000008A E2F3                    loop ..@5.popLoop
    92                                 
    93 0000008C C6043B00               mov byte [rbx+rdi], 0
    94                                 %line 67+1 int2str_macro.asm
    95                                 
    96                                 %line 67+0 int2str_macro.asm
    97 00000090 8B0425[00000000]        mov eax, dword [num3]
    98 00000097 48C7C100000000          mov rcx, 0
    99 0000009E BB0A000000              mov ebx, 10
   100 000000A3 48C7C200000000          mov rdx, 0
   101                                 
   102                                 ..@6.divideLoop:
   103 000000AA BA00000000              mov edx, 0
   104 000000AF F7F3                    div ebx
   105 000000B1 52                      push rdx
   106 000000B2 48FFC1                  inc rcx
   107 000000B5 83F800                  cmp eax, 0
   108 000000B8 75EE                    jne ..@6.divideLoop
   109                                 
   110                                 
   111                                 
   112 000000BA 488D1C25[00000000]      lea rbx, [str3]
   113 000000C2 48C7C700000000          mov rdi, 0
   114                                 ..@6.popLoop:
   115 000000C9 58                      pop rax
   116 000000CA 0430                    add al, '0'
   117 000000CC 88043B                  mov byte [rbx+rdi], al
   118 000000CF 48FFC7                  inc rdi
   119 000000D2 E2F3                    loop ..@6.popLoop
   120                                 
   121 000000D4 C6043B00               mov byte [rbx+rdi], 0
   122                                 %line 68+1 int2str_macro.asm
   123                                 
   124                                 
   125                                 last:
   126 000000D8 B83C000000              mov eax, SYS_exit
   127 000000DD BB00000000              mov ebx, EXIT_SUCCESS
   128 000000E2 0F05                    syscall
